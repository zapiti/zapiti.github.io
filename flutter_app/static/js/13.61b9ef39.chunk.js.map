{"version":3,"sources":["components/Button/styles.ts","components/Button/index.tsx","components/Form/index.tsx","components/Form/Field/index.tsx","assets/svg/square.svg","assets/svg/circle.svg","components/Input/styles.ts","components/Input/index.tsx","hooks/modal.tsx","assets/svg/close_icon.svg","components/Modal/styles.ts","components/Modal/index.tsx","../node_modules/@babel/runtime/helpers/esm/createClass.js","assets/svg/delete-icon.svg","assets/svg/edit-icon.svg","components/Table/styles.ts","components/Table/index.tsx","modules/home/modules/receptionist/modules/users/components/UsersForm/styles.ts","modules/home/modules/receptionist/modules/users/components/UsersForm/index.tsx","modules/home/modules/receptionist/modules/users/components/styles.ts","modules/home/modules/receptionist/modules/users/view/index.tsx"],"names":["Button","styled","button","props","display","colors","black_alt","dark_grey","size","css","primary","type","text","loading","loadingText","rest","Form","children","initialValues","onSubmit","validationSchema","values","validateOnChange","validateOnBlur","Field","name","id","value","label","autoComplete","placeholder","appearance","contrastBgColor","visible","useField","field","meta","errorMessage","error","Container","div","inputType","transparentize","Label","black","Input","input","isFocused","isFillied","light_grey","SquareIcon","CircleIcon","ErrorMessage","span","red","onChange","inputRef","useRef","useState","setIsFocused","setIsFillied","ref","checked","onBlur","current","onFocus","htmlFor","useModal","isShowing","setIsShowing","toggle","state","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","d","fill","_ref3","fillRule","clipRule","SvgCloseIcon","_ref","svgRef","title","titleId","width","height","viewBox","xmlns","ForwardRef","modalAnimation","keyframes","ModalOverlay","Modal","ModalHeader","Title","accent","CloseButton","centerMiddle","ModalBody","ModalFooter","ModalFooterContent","ModalButtons","hide","footer","hideCloseButton","hideOkButton","handleOk","handleClose","okText","closeText","buttonSize","modal","onClick","ReactDOM","createPortal","document","body","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","Constructor","protoProps","staticProps","TableContainer","secondary","Table","columns","data","hiddenColumns","useTable","initialState","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","data-label","Header","ButtonsContainer","FormSchema","Yup","shape","nome","required","email","senha","min","max","UsersForm","console","log","maxLength","ContainerTable","centerMiddleInline","Users","modalFormVisible","toggleModalForm","accessor","Cell","original","src","EditIcon","alt","DeleteIcon"],"mappings":"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","file":"static/js/13.61b9ef39.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\r\nimport colors from 'utils/styles/colors';\r\n\r\ninterface ButtonProps {\r\n  size?: 'sm' | 'md' | 'lg';\r\n  display?: 'block' | 'inline-block';\r\n}\r\n\r\nexport const Button = styled.button<ButtonProps>`\r\n  display: ${props => props.display};\r\n  border-radius: 24px;\r\n  background: none;\r\n  color: ${colors.black_alt};\r\n  border: 1px solid ${colors.dark_grey};\r\n  font-weight: 500;\r\n  outline: none;\r\n\r\n  ${({ size }) =>\r\n    size === 'sm' &&\r\n    css`\r\n      font-size: 13px;\r\n      padding: 6px 16px;\r\n    `}\r\n\r\n  ${({ size }) =>\r\n    size === 'md' &&\r\n    css`\r\n      font-size: 14px;\r\n      padding: 8px 32px;\r\n    `}\r\n\r\n  ${({ size }) =>\r\n    size === 'lg' &&\r\n    css`\r\n      font-size: 15px;\r\n      padding: 12px 40px;\r\n    `}\r\n\r\n  &:hover,\r\n  &:focus {\r\n    border-color: ${colors.primary};\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.95);\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { ButtonProps } from './props';\r\n\r\nimport { Button as ButtonElem } from './styles';\r\n\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  type = 'button',\r\n  text,\r\n  loading,\r\n  loadingText = 'Loading',\r\n  size = 'sm',\r\n  display = 'inline-block',\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <ButtonElem type={type} {...rest} size={size} display={display}>\r\n      {loading ? loadingText : text}\r\n    </ButtonElem>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport { Formik, Form as FormWrapper } from 'formik';\r\n\r\nimport { FormProps } from './props';\r\n\r\nconst Form: React.FC<FormProps> = ({\r\n  children,\r\n  initialValues = {},\r\n  onSubmit,\r\n  validationSchema,\r\n}) => {\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={values => onSubmit && onSubmit(values)}\r\n      validationSchema={validationSchema}\r\n      validateOnChange={false}\r\n      validateOnBlur\r\n    >\r\n      <FormWrapper>{children}</FormWrapper>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { InputHTMLAttributes } from 'react';\r\nimport { useField } from 'formik';\r\n\r\nimport Input from 'components/Input';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  id: string;\r\n  label?: string;\r\n  errorMessage?: string;\r\n  appearance?: 'border' | 'outline';\r\n  contrastBgColor?: string;\r\n  visible?: boolean;\r\n}\r\n\r\nexport const Field: React.FC<InputProps> = ({\r\n  name,\r\n  id,\r\n  value,\r\n  type = 'text',\r\n  label,\r\n  autoComplete = 'off',\r\n  placeholder,\r\n  appearance = 'border',\r\n  contrastBgColor = 'transparent',\r\n  visible = true,\r\n  ...rest\r\n}) => {\r\n  const [field, meta] = useField({ name, id, value });\r\n\r\n  return (\r\n    <Input\r\n      {...field}\r\n      id={id}\r\n      name={name}\r\n      value={field.value}\r\n      type={type}\r\n      placeholder={placeholder}\r\n      autoComplete={autoComplete}\r\n      appearance={appearance}\r\n      contrastBgColor={contrastBgColor}\r\n      label={label}\r\n      errorMessage={meta.error}\r\n      visible={visible}\r\n      {...rest}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Field;\r\n","export default __webpack_public_path__ + \"static/media/square.49a3219c.svg\";","export default __webpack_public_path__ + \"static/media/circle.9dc9109f.svg\";","import styled, { css } from 'styled-components';\r\nimport { transparentize } from 'polished';\r\n\r\nimport colors from 'utils/styles/colors';\r\n\r\nimport SquareIcon from 'assets/svg/square.svg';\r\nimport CircleIcon from 'assets/svg/circle.svg';\r\n\r\ninterface AppearanceProps {\r\n  appearance?: 'border' | 'outline';\r\n  inputType?: string;\r\n  contrastBgColor?: string;\r\n  visible?: boolean;\r\n}\r\n\r\ninterface InputProps extends AppearanceProps {\r\n  isFocused: boolean;\r\n  isFillied: boolean;\r\n}\r\n\r\nexport const Container = styled.div<AppearanceProps>`\r\n  position: relative;\r\n  display: ${props => (props.visible ? 'flex' : 'none')};\r\n\r\n  & + div {\r\n    margin-top: 80px;\r\n  }\r\n\r\n  ${({ appearance, inputType, contrastBgColor }) =>\r\n    appearance === 'border' &&\r\n    css`\r\n      flex-direction: ${inputType === 'checkbox' || inputType === 'radio'\r\n        ? 'row'\r\n        : 'column-reverse'};\r\n      margin-top: 16px;\r\n\r\n      ${(inputType === 'checkbox' || inputType === 'radio') &&\r\n      css`\r\n        padding: 9px 8px 0;\r\n        border: 1px solid ${transparentize(0.75, contrastBgColor || '')};\r\n        background: ${transparentize(0.9, contrastBgColor || '')};\r\n      `}\r\n\r\n      & + div {\r\n        margin-top: 16px;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const Label = styled.label<AppearanceProps>`\r\n  color: ${colors.black};\r\n\r\n  ${({ appearance, inputType }) =>\r\n    appearance === 'border'\r\n      ? css`\r\n          font-size: 12px;\r\n          display: block;\r\n          margin-bottom: 10px;\r\n          font-weight: 300;\r\n\r\n          &::after {\r\n            content: ':';\r\n          }\r\n\r\n          ${(inputType === 'checkbox' || inputType === 'radio') &&\r\n          css`\r\n            font-weight: 400;\r\n            font-size: 13px;\r\n            margin: 2px 0 8px 32px;\r\n            cursor: pointer;\r\n\r\n            &::after {\r\n              content: '';\r\n            }\r\n          `}\r\n        `\r\n      : css`\r\n          color: ${colors.dark_grey};\r\n          position: absolute;\r\n          bottom: -32px;\r\n          font-size: 15px;\r\n          background: #fff;\r\n          width: 100%;\r\n          padding-top: 4px;\r\n          cursor: text;\r\n          transition: all 0.2s;\r\n        `}\r\n`;\r\n\r\nexport const Input = styled.input<InputProps>`\r\n  outline: none;\r\n  color: ${colors.black};\r\n\r\n  &:focus {\r\n    border-color: ${colors.primary};\r\n  }\r\n\r\n  ${({ appearance, isFocused, isFillied, type }) =>\r\n    appearance === 'border'\r\n      ? css`\r\n          padding: 9px 14px;\r\n          border-radius: 22px;\r\n          border: 1px solid ${colors.light_grey};\r\n          font-size: 12px;\r\n\r\n          &:disabled {\r\n            background-color: ${colors.light_grey};\r\n            border-color: ${colors.dark_grey};\r\n          }\r\n\r\n          ${(type === 'checkbox' || type === 'radio') &&\r\n          css`\r\n            width: 0;\r\n\r\n            &:checked::after,\r\n            &::after {\r\n              content: '';\r\n              display: block;\r\n              width: 14px;\r\n              height: 14px;\r\n              border: 1px solid ${colors.primary};\r\n              border-radius: ${type === 'checkbox' ? '2px' : '50%'};\r\n              margin: 1px 0 0 8px;\r\n              cursor: pointer;\r\n            }\r\n\r\n            &::after {\r\n              background-color: #fff;\r\n            }\r\n\r\n            &:checked::after {\r\n              background: ${type === 'checkbox'\r\n                ? `url(${SquareIcon}) `\r\n                : `url(${CircleIcon})`};\r\n              background-repeat: no-repeat;\r\n              background-position: center center;\r\n              background-size: 10px;\r\n              background-color: #fff;\r\n            }\r\n          `}\r\n        `\r\n      : css`\r\n          position: absolute;\r\n          width: 100%;\r\n          border: none;\r\n          border-bottom: 1px solid ${colors.light_grey};\r\n          padding: 11px 0;\r\n          font-size: 15px;\r\n\r\n          &:disabled {\r\n            background: none;\r\n            border-color: ${colors.dark_grey};\r\n          }\r\n\r\n          ${(isFocused || isFillied) &&\r\n          css`\r\n            & + label {\r\n              font-size: 12px;\r\n              bottom: -4px;\r\n            }\r\n          `}\r\n        `};\r\n`;\r\n\r\nexport const ErrorMessage = styled.span<AppearanceProps>`\r\n  color: ${colors.red};\r\n  font-size: 13px;\r\n\r\n  ${({ appearance }) =>\r\n    appearance === 'outline'\r\n      ? css`\r\n          position: absolute;\r\n          bottom: -60px;\r\n        `\r\n      : css`\r\n          margin-top: 4px;\r\n        `}\r\n`;\r\n","import React, { useState, useRef } from 'react';\r\n\r\nimport { InputProps } from './props';\r\nimport { Container, Input as InputElem, Label, ErrorMessage } from './styles';\r\n\r\nexport const Input: React.FC<InputProps> = ({\r\n  name,\r\n  id,\r\n  type = 'text',\r\n  label,\r\n  value,\r\n  autoComplete = 'off',\r\n  placeholder,\r\n  appearance = 'border',\r\n  contrastBgColor = 'transparent',\r\n  errorMessage,\r\n  visible = true,\r\n  onChange,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isFillied, setIsFillied] = useState(false);\r\n\r\n  const handleInputFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    setIsFocused(false);\r\n    setIsFillied(!!inputRef.current?.value);\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      appearance={appearance}\r\n      inputType={type}\r\n      contrastBgColor={contrastBgColor}\r\n      visible={visible}\r\n    >\r\n      <ErrorMessage appearance={appearance}>\r\n        {errorMessage && <>{errorMessage}</>}\r\n      </ErrorMessage>\r\n      <InputElem\r\n        ref={inputRef}\r\n        {...rest}\r\n        id={id}\r\n        name={name}\r\n        value={value}\r\n        checked={!!value}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        onBlur={handleInputBlur}\r\n        onFocus={handleInputFocus}\r\n        onChange={onChange}\r\n        isFocused={isFocused}\r\n        isFillied={isFillied}\r\n        autoComplete={autoComplete}\r\n        appearance={appearance}\r\n      />\r\n\r\n      <Label htmlFor={id} appearance={appearance} inputType={type}>\r\n        {label}\r\n      </Label>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useState } from 'react';\r\n\r\ninterface Modal {\r\n  isShowing: boolean;\r\n  toggle(): void;\r\n}\r\n\r\nconst useModal = (): Modal => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(state => !state);\r\n  }\r\n\r\n  return {\r\n    isShowing,\r\n    toggle,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.34 8.32205C15.4361 8.23249 15.5136 8.12488 15.568 8.00538C15.6225 7.88587 15.6529 7.75681 15.6575 7.62555C15.6621 7.4943 15.6408 7.36342 15.5948 7.2404C15.5488 7.11737 15.4791 7.00461 15.3895 6.90855C15.2999 6.81249 15.1923 6.73501 15.0728 6.68053C14.9533 6.62605 14.8243 6.59565 14.693 6.59105C14.5618 6.58646 14.4309 6.60776 14.3079 6.65374C14.1848 6.69972 14.0721 6.76949 13.976 6.85905L11.05 9.58705L8.32201 6.66005C8.13948 6.47309 7.89102 6.36501 7.6298 6.35891C7.36859 6.35282 7.11536 6.44921 6.92431 6.62745C6.73327 6.8057 6.61957 7.05164 6.60755 7.31265C6.59553 7.57366 6.68615 7.829 6.86001 8.02405L9.58801 10.95L6.66101 13.6781C6.56155 13.7667 6.48082 13.8743 6.42354 13.9946C6.36626 14.1149 6.3336 14.2454 6.32747 14.3785C6.32135 14.5116 6.34188 14.6446 6.38786 14.7696C6.43384 14.8947 6.50434 15.0093 6.59523 15.1067C6.68612 15.2041 6.79555 15.2824 6.91711 15.3369C7.03867 15.3915 7.16991 15.4212 7.3031 15.4243C7.4363 15.4274 7.56877 15.4038 7.69274 15.355C7.81671 15.3062 7.92968 15.2331 8.02501 15.14L10.951 12.413L13.679 15.3391C13.7671 15.4403 13.8747 15.5229 13.9953 15.5817C14.116 15.6405 14.2472 15.6745 14.3813 15.6815C14.5153 15.6885 14.6494 15.6685 14.7756 15.6226C14.9017 15.5767 15.0173 15.5058 15.1155 15.4143C15.2137 15.3228 15.2924 15.2124 15.3471 15.0898C15.4017 14.9672 15.4311 14.8348 15.4334 14.7006C15.4358 14.5664 15.4112 14.4331 15.3609 14.3086C15.3107 14.1841 15.2359 14.071 15.141 13.976L12.414 11.05L15.34 8.32205Z\",\n  fill: \"#D9D2C8\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M0 11C0 4.925 4.925 0 11 0C17.075 0 22 4.925 22 11C22 17.075 17.075 22 11 22C4.925 22 0 17.075 0 11ZM11 20C9.8181 20 8.64778 19.7672 7.55585 19.3149C6.46392 18.8626 5.47177 18.1997 4.63604 17.364C3.80031 16.5282 3.13738 15.5361 2.68508 14.4442C2.23279 13.3522 2 12.1819 2 11C2 9.8181 2.23279 8.64778 2.68508 7.55585C3.13738 6.46392 3.80031 5.47177 4.63604 4.63604C5.47177 3.80031 6.46392 3.13738 7.55585 2.68508C8.64778 2.23279 9.8181 2 11 2C13.3869 2 15.6761 2.94821 17.364 4.63604C19.0518 6.32387 20 8.61305 20 11C20 13.3869 19.0518 15.6761 17.364 17.364C15.6761 19.0518 13.3869 20 11 20Z\",\n  fill: \"#D9D2C8\"\n});\n\nfunction SvgCloseIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 22,\n    height: 22,\n    viewBox: \"0 0 22 22\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseIcon);\nexport default __webpack_public_path__ + \"static/media/close_icon.9fa32f03.svg\";\nexport { ForwardRef as ReactComponent };","import styled, { keyframes } from 'styled-components';\r\nimport colors from '../../utils/styles/colors';\r\nimport { centerMiddle } from '../../utils/styles/commonStyles';\r\n\r\nconst modalAnimation = keyframes`\r\n  0% {\r\n    transform: scale(0);\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    transform: scale(1);\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  max-height: 100vh;\r\n  padding: 2%;\r\n  background-color: rgba(0, 0, 0, 0.55);\r\n  z-index: 1040;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  margin: auto;\r\n  width: 90%;\r\n  min-height: 200px;\r\n  max-width: 420px;\r\n  padding: 24px;\r\n  background: white;\r\n  animation: ${modalAnimation} 0.5s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n  position: sticky;\r\n  top: -12px;\r\n  background-color: #fff;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  z-index: 999;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    top: -24px;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 24px;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 16px;\r\n  color: ${colors.accent};\r\n  flex: 1;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  ${centerMiddle}\r\n  width: 32px;\r\n  height: 32px;\r\n  border: 0;\r\n  background: none;\r\n  outline-color: ${colors.primary};\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  margin-top: 16px;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ModalFooterContent = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  margin-top: 32px;\r\n`;\r\n\r\nexport const ModalButtons = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  flex: 1;\r\n  margin-top: 32px;\r\n\r\n  button + button {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { ReactComponent as CloseIcon } from 'assets/svg/close_icon.svg';\r\n\r\nimport Button from 'components/Button';\r\n\r\nimport { ModalProps } from './props';\r\n\r\nimport {\r\n  ModalOverlay,\r\n  Modal as Container,\r\n  ModalHeader,\r\n  Title,\r\n  CloseButton,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalFooterContent,\r\n  ModalButtons,\r\n} from './styles';\r\n\r\nconst Modal: React.FC<ModalProps> = ({\r\n  children,\r\n  isShowing,\r\n  hide,\r\n  title,\r\n  footer,\r\n  hideCloseButton = false,\r\n  hideOkButton = false,\r\n  handleOk,\r\n  handleClose,\r\n  okText = 'Ok',\r\n  closeText = 'Cancelar',\r\n  buttonSize = 'sm',\r\n}) => {\r\n  const modal = (\r\n    <ModalOverlay>\r\n      <Container>\r\n        <ModalHeader>\r\n          <Title>{title}</Title>\r\n          <CloseButton onClick={hide}>\r\n            <CloseIcon />\r\n          </CloseButton>\r\n        </ModalHeader>\r\n\r\n        <ModalBody>{children}</ModalBody>\r\n\r\n        <ModalFooter>\r\n          {footer && <ModalFooterContent>{footer}</ModalFooterContent>}\r\n\r\n          {(!hideOkButton || !hideCloseButton) && (\r\n            <ModalButtons>\r\n              {!hideCloseButton && (\r\n                <Button\r\n                  text={closeText}\r\n                  onClick={handleClose || hide}\r\n                  size=\"md\"\r\n                />\r\n              )}\r\n              {!hideOkButton && (\r\n                <Button text={okText} onClick={handleOk} size={buttonSize} />\r\n              )}\r\n            </ModalButtons>\r\n          )}\r\n        </ModalFooter>\r\n      </Container>\r\n    </ModalOverlay>\r\n  );\r\n\r\n  return isShowing ? ReactDOM.createPortal(modal, document.body) : null;\r\n};\r\n\r\nexport default Modal;\r\n","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default __webpack_public_path__ + \"static/media/delete-icon.086f0da1.svg\";","export default __webpack_public_path__ + \"static/media/edit-icon.e99ef0be.svg\";","import styled from 'styled-components';\r\nimport colors from '../../utils/styles/colors';\r\n\r\nexport const TableContainer = styled.div`\r\n  overflow-x: auto;\r\n\r\n  table {\r\n    width: 100%;\r\n    min-width: max-content;\r\n    border-spacing: 0;\r\n    border-collapse: collapse;\r\n    table-layout: fixed;\r\n\r\n    thead {\r\n      background-color: ${colors.secondary};\r\n      font-size: 13px;\r\n      font-weight: 400;\r\n\r\n      tr {\r\n        th {\r\n          padding: 18px 24px;\r\n          text-align: left;\r\n        }\r\n\r\n        @media (max-width: 600px) {\r\n          border-bottom: 3px solid red;\r\n          display: block;\r\n          margin-bottom: 0.625em;\r\n        }\r\n      }\r\n\r\n      @media (max-width: 600px) {\r\n        border: none;\r\n        clip: rect(0 0 0 0);\r\n        height: 1px;\r\n        margin: -1px;\r\n        overflow: hidden;\r\n        padding: 0;\r\n        position: absolute;\r\n        width: 1px;\r\n      }\r\n    }\r\n\r\n    tbody {\r\n      tr {\r\n        td {\r\n          padding: 16px 24px;\r\n          text-align: left;\r\n          font-size: 13px;\r\n          font-weight: 400;\r\n\r\n          @media (max-width: 600px) {\r\n            border-bottom: 1px solid ${colors.light_grey};\r\n            display: block;\r\n            font-size: 0.8em;\r\n            text-align: right;\r\n\r\n            &::before {\r\n              content: attr(data-label);\r\n              float: left;\r\n              font-weight: bold;\r\n            }\r\n          }\r\n        }\r\n\r\n        @media (max-width: 600px) {\r\n          display: block;\r\n          margin-bottom: 32px;\r\n          border-bottom: 3px solid ${colors.light_grey};\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { useTable } from 'react-table';\r\n\r\nimport { TableProps } from './props';\r\nimport { TableContainer } from './styles';\r\n\r\nconst Table: React.FC<TableProps> = ({ columns, data, hiddenColumns = [] }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n    initialState: {\r\n      hiddenColumns,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <TableContainer>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <td\r\n                      {...cell.getCellProps()}\r\n                      data-label={cell.column.Header}\r\n                    >\r\n                      {cell.render('Cell')}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n\r\n  button {\r\n    margin-left: auto;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport * as Yup from 'yup';\r\n\r\nimport Form from 'components/Form';\r\nimport Field from 'components/Form/Field';\r\nimport Modal from 'components/Modal';\r\nimport Button from 'components/Button';\r\n\r\nimport { ButtonsContainer } from './styles';\r\n\r\nconst FormSchema = Yup.object().shape({\r\n  nome: Yup.string().required('Campo obrigatório'),\r\n  email: Yup.string().required('Campo obrigatório').email('Email inválido'),\r\n  senha: Yup.string()\r\n    .required('Campo obrigatório')\r\n    .min(6, 'Minimo de 6 caracteres')\r\n    .max(50, 'Máximo de 50 caracteres'),\r\n});\r\n\r\ninterface UsersFormProps {\r\n  isShowing: boolean;\r\n  toggle(): void;\r\n  initialValues?: object;\r\n}\r\nconst UsersForm: React.FC<UsersFormProps> = ({\r\n  isShowing,\r\n  toggle,\r\n  initialValues,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      isShowing={isShowing}\r\n      hide={toggle}\r\n      title=\"Adicionar novo usuário\"\r\n      okText=\"Salvar\"\r\n      hideCloseButton\r\n      hideOkButton\r\n      handleOk={toggle}\r\n    >\r\n      <Form\r\n        initialValues={initialValues}\r\n        onSubmit={values => console.log(values)}\r\n        validationSchema={FormSchema}\r\n      >\r\n        <Field\r\n          id=\"nome\"\r\n          name=\"nome\"\r\n          label=\"Nome completo\"\r\n          placeholder=\"Digite o nome\"\r\n          maxLength={50}\r\n        />\r\n\r\n        <Field\r\n          id=\"email\"\r\n          name=\"email\"\r\n          label=\"E-mail\"\r\n          placeholder=\"Digite o e-mail\"\r\n        />\r\n\r\n        <Field\r\n          id=\"senha\"\r\n          name=\"senha\"\r\n          label=\"Senha\"\r\n          type=\"password\"\r\n          placeholder=\"Crie uma senha\"\r\n        />\r\n\r\n        <Field\r\n          id=\"senha2\"\r\n          name=\"senha2\"\r\n          label=\"Confirmar senha\"\r\n          type=\"password\"\r\n          placeholder=\"Confirme a senha\"\r\n        />\r\n\r\n        <ButtonsContainer>\r\n          <Button type=\"submit\" text=\"Salvar\" />\r\n        </ButtonsContainer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UsersForm;\r\n","import styled from 'styled-components';\r\nimport colors from 'utils/styles/colors';\r\nimport { centerMiddleInline } from 'utils/styles/commonStyles';\r\n\r\nexport const Container = styled.div`\r\n  flex: 1;\r\n  padding: 40px 4%;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  h1 {\r\n    font-size: 18px;\r\n    color: ${colors.accent};\r\n  }\r\n`;\r\n\r\nexport const ContainerTable = styled.div`\r\n  margin-top: 20px;\r\n\r\n  table {\r\n    button {\r\n      ${centerMiddleInline}\r\n      width: 24px;\r\n      height: 24px;\r\n      border: 0;\r\n      background: none;\r\n      outline-color: ${colors.primary};\r\n      vertical-align: middle;\r\n\r\n      & + button {\r\n        margin-left: 8px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport useModal from 'hooks/modal';\r\n\r\nimport Button from 'components/Button';\r\nimport Table from 'components/Table';\r\nimport DeleteIcon from 'assets/svg/delete-icon.svg';\r\nimport EditIcon from 'assets/svg/edit-icon.svg';\r\nimport UsersForm from '../components/UsersForm';\r\n\r\nimport { Container, Header, ContainerTable } from '../components/styles';\r\n\r\nconst Users: React.FC = () => {\r\n  const { isShowing: modalFormVisible, toggle: toggleModalForm } = useModal();\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Header>\r\n          <h1>Usuários</h1>\r\n\r\n          <Button text=\"+ Adicionar novo\" onClick={toggleModalForm} />\r\n        </Header>\r\n\r\n        <ContainerTable>\r\n          <Table\r\n            columns={[\r\n              { Header: 'Id', accessor: 'id' },\r\n              { Header: 'Nome', accessor: 'nome' },\r\n              { Header: 'Email', accessor: 'email' },\r\n              {\r\n                Header: 'Ações',\r\n                accessor: 'acoes',\r\n                Cell: ({ row: { original } }) => (\r\n                  <>\r\n                    <button type=\"button\" onClick={toggleModalForm}>\r\n                      <img src={EditIcon} alt=\"Editar\" />\r\n                    </button>\r\n\r\n                    <button type=\"button\">\r\n                      <img src={DeleteIcon} alt=\"Editar\" />\r\n                    </button>\r\n                  </>\r\n                ),\r\n              },\r\n            ]}\r\n            data={[\r\n              {\r\n                id: 1,\r\n                nome: 'Carolina Castro',\r\n                email: 'carol.castro@gmail.com',\r\n              },\r\n              {\r\n                id: 2,\r\n                nome: 'Carolina Almeida',\r\n                email: 'carol.almeida@gmail.com',\r\n              },\r\n              { id: 3, email: 'carol.alves@gmail.com', nome: 'Carolina Alves' },\r\n              { id: 4, email: 'carol.silva@gmail.com', nome: 'Carolina Silva' },\r\n            ]}\r\n            hiddenColumns={['id']}\r\n          />\r\n        </ContainerTable>\r\n      </Container>\r\n\r\n      <UsersForm isShowing={modalFormVisible} toggle={toggleModalForm} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}