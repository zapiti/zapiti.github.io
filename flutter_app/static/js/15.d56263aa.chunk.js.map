{"version":3,"sources":["hooks/modal.tsx","components/Select/styles.ts","components/Select/customStyles.ts","components/Select/index.tsx","components/SideBar/index.tsx","utils/time.ts","components/ViewMessages/emptyview.tsx","components/ViewMessages/loadView.tsx","assets/svg/prev.svg","assets/svg/next.svg","components/Calendar/styles.ts","components/Calendar/index.tsx","components/Tabs/styles.ts","components/Tabs/index.tsx","components/MySchedule/styles.ts","components/MySchedule/index.tsx","modules/home/modules/professional/modules/schedules/components/styles.ts","modules/home/modules/professional/modules/schedules/view/index.tsx"],"names":["useModal","useState","isShowing","setIsShowing","toggle","state","Container","styled","div","Label","label","colors","black","option","provided","border","color","isSelected","white","background","primary","fontSize","padding","marginTop","control","borderRadius","isFocused","light_grey","boxShadow","height","minHeight","menu","menuList","borderTop","menuPortal","left","indicatorsContainer","Select","id","name","value","options","disabled","searchable","loading","multiple","placeholder","noOptionsMessage","focus","openMenuOnFocus","hideSelectedOptions","onchange","selectValue","setselectValue","selectFocused","setselectFocused","useEffect","Array","isArray","selectedOptions","filter","indexOf","selectedOption","find","handleChange","useCallback","map","htmlFor","onClick","inputId","isDisabled","isSearchable","isLoading","isMulti","autoFocus","isClearable","onChange","styles","CustomStyles","menuPosition","SideBar","children","document","getElementById","sideBar","createPortal","body","hoursToDecimal","hours","dec","hourInDecimal","Math","floor","minDec","EmptyView","message","myMessage","LoadView","aside","centerMiddle","black_alt","secondary","Next","Prev","Calendar","onDateChange","selectedDate","Date","months","weekdaysShort","onDayClick","selectedDays","showOutsideDays","Tabs","tabOpened","labels","tabs","onSelect","defaultIndex","elem","disabledClassName","selectedClassName","key","tab","Hours","Hour","Appointments","AppointmentHour","Appointment","props","duration","startHour","css","shade","AppointmentTitle","span","dark_grey","AppointmentPeriod","AppointmentDescription","MySchedule","originalData","data","setData","useMemo","today","day","getFullYear","getMonth","getDay","hoursFormatted","index","push","format","addHours","endHour","scrollIntoView","formattedData","item","startTime","Number","startDate","differenceInMinutes","endtDate","hour","console","log","role","aria-pressed","appointment","title","description","scheduleId","TabContainer","SelectContainer","Scheduling","useSelector","professionalSchedules","resulted","dispatch","useDispatch","getProfessionalSchedulesRequest","date","success","length"],"mappings":"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","file":"static/js/15.d56263aa.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\ninterface Modal {\r\n  isShowing: boolean;\r\n  toggle(): void;\r\n}\r\n\r\nconst useModal = (): Modal => {\r\n  const [isShowing, setIsShowing] = useState(false);\r\n\r\n  function toggle() {\r\n    setIsShowing(state => !state);\r\n  }\r\n\r\n  return {\r\n    isShowing,\r\n    toggle,\r\n  };\r\n};\r\n\r\nexport default useModal;\r\n","import styled from 'styled-components';\r\nimport colors from '../../utils/styles/colors';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n\r\n  & + div {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  svg {\r\n    width: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  margin-bottom: 10px;\r\n  font-weight: 300;\r\n  font-size: 12px;\r\n  color: ${colors.black};\r\n\r\n  &::after {\r\n    content: ':';\r\n  }\r\n`;\r\n","/* eslint-disable */\r\nimport colors from '../../utils/styles/colors';\r\n\r\nexport default {\r\n  option: (provided: any, state: any) => ({\r\n    ...provided,\r\n    border: '0',\r\n    color: state.isSelected\r\n      ? `${colors.white} !important`\r\n      : `${colors.black} !important`,\r\n    background: state.isSelected\r\n      ? `${colors.primary} !important`\r\n      : `${colors.white} !important`,\r\n    fontSize: '12px',\r\n    padding: '8px 16px',\r\n    marginTop: '-1px',\r\n  }),\r\n\r\n  control: (provided: any, state: any) => {\r\n    const borderRadius = state.isFocused ? '20px 20px 0 0' : '20px';\r\n    const height = '34.4px';\r\n    const minHeight = 'initial';\r\n    const padding = state.isFocused ? '0 8px' : '0 8px';\r\n    const fontSize = '12px';\r\n    const border = state.isFocused\r\n      ? `1px solid ${colors.primary} !important`\r\n      : `1px solid ${colors.light_grey} !important`;\r\n    const boxShadow = state.isFocused ? 'none' : 'none';\r\n\r\n    return {\r\n      ...provided,\r\n      borderRadius,\r\n      padding,\r\n      fontSize,\r\n      border,\r\n      boxShadow,\r\n      height,\r\n      minHeight\r\n    };\r\n  },\r\n\r\n  menu: () => ({\r\n    padding: 0,\r\n    background: 'none',\r\n  }),\r\n\r\n  menuList: (provided: any, state: any) => {\r\n    const border = `1px solid ${colors.primary}`;\r\n    const borderTop = `0`;\r\n    const borderRadius = '0 0 20px 20px';\r\n\r\n    return {\r\n      ...provided,\r\n      border,\r\n      borderTop,\r\n      borderRadius,\r\n      padding: 0,\r\n      background: '#fff',\r\n      marginTop: '-2px',\r\n    };\r\n  },\r\n\r\n  menuPortal: (provided: any, state: any) => ({ left: 0 }),\r\n\r\n  indicatorsContainer: (provided: any, state: any) => (\r\n    {...provided, marginTop: '-1px'}\r\n  ),\r\n};\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport SelectElem from 'react-select';\r\n\r\nimport { SelectProps } from './props';\r\nimport { Container, Label } from './styles';\r\nimport CustomStyles from './customStyles';\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  id,\r\n  name,\r\n  value,\r\n  options,\r\n  label,\r\n  disabled = false,\r\n  searchable = true,\r\n  loading = false,\r\n  multiple = false,\r\n  placeholder = 'Selecione',\r\n  noOptionsMessage = 'Nenhuma opção disponível',\r\n  focus = false,\r\n  openMenuOnFocus = true,\r\n  hideSelectedOptions = true,\r\n  onchange,\r\n}) => {\r\n  const [selectValue, setselectValue] = useState<object | object[]>();\r\n  const [selectFocused, setselectFocused] = useState(focus);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(value)) {\r\n      const selectedOptions = options.filter(\r\n        option => value.indexOf(option.value) > -1,\r\n      );\r\n\r\n      setselectValue(selectedOptions);\r\n    } else {\r\n      const selectedOption = options.find(option => option.value === value);\r\n\r\n      if (selectedOption) {\r\n        setselectValue(selectedOption);\r\n      }\r\n    }\r\n  }, [value, options]);\r\n\r\n  const handleChange = useCallback(\r\n    option => {\r\n      if (Array.isArray(option)) {\r\n        const selectedOptions = option.map(\r\n          (selectedOption: any) => selectedOption.value,\r\n        );\r\n\r\n        onchange(selectedOptions);\r\n      } else {\r\n        onchange(option && option.value);\r\n      }\r\n\r\n      setselectValue(option);\r\n    },\r\n    [onchange],\r\n  );\r\n\r\n  return (\r\n    <Container>\r\n      {label && (\r\n        <Label htmlFor={id} onClick={() => setselectFocused(state => !state)}>\r\n          {label}\r\n        </Label>\r\n      )}\r\n\r\n      <SelectElem\r\n        inputId={id}\r\n        name={name}\r\n        value={selectValue}\r\n        options={options}\r\n        isDisabled={disabled}\r\n        isSearchable={searchable}\r\n        isLoading={loading}\r\n        isMulti={multiple}\r\n        autoFocus={selectFocused}\r\n        openMenuOnFocus={openMenuOnFocus}\r\n        isClearable\r\n        onChange={option => handleChange(option)}\r\n        noOptionsMessage={() => noOptionsMessage}\r\n        hideSelectedOptions={hideSelectedOptions}\r\n        placeholder={placeholder}\r\n        styles={CustomStyles}\r\n        menuPosition=\"absolute\"\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nconst SideBar: React.FC = ({ children }) => {\r\n  const [sideBar] = useState(document.getElementById('sideBar'));\r\n\r\n  return createPortal(children, sideBar || document.body);\r\n};\r\n\r\nexport default SideBar;\r\n","export function hoursToDecimal(hours: number): number {\r\n  const dec = hours / 100;\r\n  const hourInDecimal = Math.floor(dec) * 100;\r\n  const min = dec - Math.floor(dec);\r\n  const minDec = ((min * 100) / 60) * 100;\r\n\r\n  return Math.floor(hourInDecimal + minDec);\r\n}\r\n","import React, { useState } from 'react';\n\ninterface EmptyViewProps {\n  myMessage: string;\n}\n\nconst EmptyView: React.FC<EmptyViewProps> = ({ myMessage: message }) => {\n  return <div>{message || 'Não há dados'}</div>;\n};\n\nexport default EmptyView;\n","import React from 'react';\n\nconst LoadView: React.FC = () => {\n  return <div>Carregando</div>;\n};\n\nexport default LoadView;\n","export default __webpack_public_path__ + \"static/media/prev.84f3d831.svg\";","export default __webpack_public_path__ + \"static/media/next.bcff77dd.svg\";","import styled from 'styled-components';\r\nimport colors from 'utils/styles/colors';\r\nimport { centerMiddle } from 'utils/styles/commonStyles';\r\n\r\nimport Prev from 'assets/svg/prev.svg';\r\nimport Next from 'assets/svg/next.svg';\r\n\r\nexport const Container = styled.aside`\r\n  ${centerMiddle}\r\n\r\n  .DayPicker {\r\n    font-size: 14px;\r\n    width: 95%;\r\n    margin: auto;\r\n  }\r\n\r\n  .DayPicker-Caption {\r\n    color: #434343;\r\n  }\r\n  .DayPicker-wrapper {\r\n    padding-bottom: 0;\r\n    outline-color: ${colors.primary};\r\n  }\r\n\r\n  .DayPicker,\r\n  .DayPicker-Month {\r\n    max-width: 300px;\r\n  }\r\n\r\n  .DayPicker-Month {\r\n    border-collapse: separate;\r\n    border-spacing: 8px;\r\n    margin: 16px;\r\n  }\r\n\r\n  .DayPicker-Day {\r\n    width: 32px;\r\n    height: 32px;\r\n    outline-color: ${colors.primary};\r\n  }\r\n\r\n  .DayPicker-Day:hover {\r\n    background-color: ${colors.white} !important;\r\n    color: ${colors.black_alt} !important;\r\n  }\r\n\r\n  .DayPicker-Day--today {\r\n    font-weight: 600;\r\n  }\r\n\r\n  .DayPicker-Day--selected {\r\n    background: ${colors.primary} !important;\r\n    border-radius: 50%;\r\n    color: ${colors.secondary} !important;\r\n  }\r\n\r\n  .DayPicker-NavButton--next {\r\n    background-image: url(${Next});\r\n  }\r\n\r\n  .DayPicker-NavButton--prev {\r\n    margin-right: 25px;\r\n    background-image: url(${Prev});\r\n  }\r\n\r\n  .DayPicker-NavButton {\r\n    outline-color: ${colors.primary};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport DayPicker from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nimport { CalendarProps } from './props';\r\nimport { Container } from './styles';\r\n\r\nconst Calendar: React.FC<CalendarProps> = ({\r\n  onDateChange,\r\n  selectedDate = new Date(),\r\n}) => {\r\n  const weekdaysShort = ['S', 'T', 'Q', 'Q', 'S', 'S', 'D'];\r\n  const months = [\r\n    'Janeiro',\r\n    'Fevereiro',\r\n    'Março',\r\n    'Abril',\r\n    'Maio',\r\n    'Junho',\r\n    'Julho',\r\n    'Agosto',\r\n    'Setembro',\r\n    'Outubro',\r\n    'Novembro',\r\n    'Dezembro',\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      <DayPicker\r\n        months={months}\r\n        weekdaysShort={weekdaysShort}\r\n        onDayClick={onDateChange}\r\n        selectedDays={selectedDate}\r\n        showOutsideDays\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import styled from 'styled-components';\r\nimport colors from '../../utils/styles/colors';\r\nimport { centerMiddle } from '../../utils/styles/commonStyles';\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n\r\n  ul {\r\n    position: sticky;\r\n    top: 0;\r\n    display: flex;\r\n    list-style: none;\r\n    width: 100%;\r\n    height: 46px;\r\n    background-color: #f9f9f9;\r\n\r\n    li {\r\n      position: relative;\r\n      ${centerMiddle}\r\n      height: 46px;\r\n      padding: 0 30px;\r\n      color: ${colors.black_alt};\r\n      text-transform: uppercase;\r\n      text-decoration: none;\r\n      font-size: 14px;\r\n      cursor: pointer;\r\n      outline: none;\r\n\r\n      &:hover {\r\n        background-color: ${colors.light_grey};\r\n      }\r\n\r\n      &.disabled {\r\n        opacity: 0.5;\r\n        background-color: #f9f9f9;\r\n      }\r\n\r\n      &.active {\r\n        font-weight: 600;\r\n        background-color: ${colors.white};\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Tab, Tabs as TabElem, TabList, TabPanel } from 'react-tabs';\r\n\r\nimport { TabsProps } from './props';\r\nimport { Container } from './styles';\r\n\r\nconst Tabs: React.FC<TabsProps> = ({\r\n  tabOpened = 0,\r\n  labels,\r\n  tabs,\r\n  onSelect = () => true,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <TabElem defaultIndex={tabOpened} onSelect={onSelect}>\r\n        <TabList>\r\n          {labels.map(elem => (\r\n            <Tab\r\n              key={elem.key}\r\n              disabled={elem.disabled}\r\n              disabledClassName=\"disabled\"\r\n              selectedClassName=\"active\"\r\n            >\r\n              {elem.label}\r\n            </Tab>\r\n          ))}\r\n        </TabList>\r\n\r\n        {tabs.map(elem => (\r\n          <TabPanel key={elem.key}>{elem.tab}</TabPanel>\r\n        ))}\r\n      </TabElem>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import styled, { css } from 'styled-components';\r\nimport { shade } from 'polished';\r\n\r\nimport colors from '../../utils/styles/colors';\r\n\r\ninterface AppointmentProps {\r\n  startHour: number;\r\n  duration: number;\r\n  color: string;\r\n}\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  max-height: 500px;\r\n  padding: 4px 32px;\r\n  margin: 32px;\r\n  overflow: auto;\r\n`;\r\n\r\nexport const Hours = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-right: 20px;\r\n`;\r\n\r\nexport const Hour = styled.div`\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n  min-height: 120px;\r\n  color: ${colors.black};\r\n`;\r\n\r\nexport const Appointments = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n\r\nexport const AppointmentHour = styled.div`\r\n  min-height: 120px;\r\n  width: 100%;\r\n\r\n  &:hover {\r\n    border: 1px solid ${colors.light_grey};\r\n    border-radius: 2px;\r\n  }\r\n`;\r\n\r\nexport const Appointment = styled.div<AppointmentProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  position: absolute;\r\n  padding: 8px;\r\n  width: 100%;\r\n  height: ${props => props.duration}px;\r\n  top: ${props => props.startHour}px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  transition: all 0.25s;\r\n\r\n  &:hover {\r\n    min-height: 60px;\r\n  }\r\n\r\n  ${({ color }) => css`\r\n    background-color: ${color};\r\n    border-left: 2px solid ${shade(0.1, color)};\r\n  `}\r\n`;\r\n\r\nexport const AppointmentTitle = styled.span`\r\n  font-size: 11px;\r\n  color: ${colors.dark_grey};\r\n`;\r\n\r\nexport const AppointmentPeriod = styled.div`\r\n  font-size: 13px;\r\n  color: ${colors.dark_grey};\r\n  margin-top: 3px;\r\n`;\r\n\r\nexport const AppointmentDescription = styled.div`\r\n  font-size: 13px;\r\n  font-weight: 400;\r\n  color: ${colors.black_alt};\r\n  margin-top: 3px;\r\n`;\r\n","import { addHours, differenceInMinutes, format } from 'date-fns';\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\n\r\nimport { hoursToDecimal } from 'utils/time';\r\n\r\nimport {\r\n  Container,\r\n  Hours,\r\n  Hour,\r\n  Appointments,\r\n  AppointmentHour,\r\n  Appointment,\r\n  AppointmentTitle,\r\n  AppointmentPeriod,\r\n  AppointmentDescription,\r\n} from './styles';\r\n\r\ninterface Hour {\r\n  startHour: string;\r\n  endHour: string;\r\n}\r\n\r\ninterface Appointment {\r\n  scheduleId: number;\r\n  startDate: Date;\r\n  endtDate: Date;\r\n  title: string;\r\n  description: string;\r\n  startTime?: number;\r\n  duration?: number;\r\n  startHour?: string;\r\n  endHour?: string;\r\n}\r\n\r\ninterface MyScheduleProps {\r\n  data: Appointment[];\r\n}\r\n\r\nconst MySchedule: React.FC<MyScheduleProps> = ({ data: originalData }) => {\r\n  const [data, setData] = useState<Appointment[]>([]);\r\n  const hours = useMemo(() => {\r\n    const today = new Date();\r\n    const day = new Date(\r\n      today.getFullYear(),\r\n      today.getMonth(),\r\n      today.getDay(),\r\n      0,\r\n    );\r\n\r\n    const hoursFormatted: Hour[] = [];\r\n\r\n    for (let index = 0; index < 24; index += 1) {\r\n      hoursFormatted.push({\r\n        startHour: format(addHours(day, index), 'HH:mm'),\r\n        endHour: format(addHours(addHours(day, index), 1), 'HH:mm'),\r\n      });\r\n    }\r\n\r\n    return hoursFormatted;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.getElementById('08:00-09:00')?.scrollIntoView();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const formattedData = originalData.map(item => ({\r\n      ...item,\r\n      startTime:\r\n        (hoursToDecimal(Number(format(new Date(item.startDate), 'HHmm'))) *\r\n          120) /\r\n        100,\r\n      duration:\r\n        (differenceInMinutes(\r\n          new Date(item.endtDate),\r\n          new Date(item.startDate),\r\n        ) /\r\n          60) *\r\n        120,\r\n      startHour: format(new Date(item.startDate), 'HH:mm'),\r\n      endHour: format(new Date(item.endtDate), 'HH:mm'),\r\n    }));\r\n\r\n    setData(formattedData);\r\n  }, [originalData]);\r\n\r\n  const handleClikcHour = (startHour: string, endHour: string) => {\r\n    console.log(`Agendamento de ${startHour} a ${endHour}`);\r\n  };\r\n\r\n  const handleClikApppointment = (appointment: Appointment) => {\r\n    console.log(appointment);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Hours>\r\n        {hours.map(hour => (\r\n          <Hour\r\n            key={`${hour.startHour}-${hour.endHour}`}\r\n            id={`${hour.startHour}-${hour.endHour}`}\r\n          >\r\n            {hour.startHour}\r\n          </Hour>\r\n        ))}\r\n      </Hours>\r\n\r\n      <Appointments>\r\n        {hours.map(hour => (\r\n          <AppointmentHour\r\n            key={`Appointment_${hour.startHour}-${hour.endHour}`}\r\n            onClick={() => handleClikcHour(hour.startHour, hour.endHour)}\r\n            role=\"button\"\r\n            aria-pressed=\"false\"\r\n          />\r\n        ))}\r\n\r\n        {data.map(item => (\r\n          <Appointment\r\n            key={`${item.startHour}-${item.endHour}_${item.scheduleId}`}\r\n            startHour={item.startTime || 0}\r\n            duration={item.duration || 0}\r\n            onClick={() => handleClikApppointment(item)}\r\n            color=\"#F0FFEE\"\r\n            role=\"button\"\r\n            aria-pressed=\"false\"\r\n          >\r\n            <AppointmentTitle>{item.title}</AppointmentTitle>\r\n            <AppointmentPeriod>{`${item.startHour} - ${item.endHour}`}</AppointmentPeriod>\r\n            <AppointmentDescription>{item.description}</AppointmentDescription>\r\n          </Appointment>\r\n        ))}\r\n      </Appointments>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MySchedule;\r\n","import styled from 'styled-components';\r\nimport colors from 'utils/styles/colors';\r\n\r\nexport const TabContainer = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const SelectContainer = styled.div`\r\n  padding: 16px;\r\n  border-top: 1px solid ${colors.light_grey};\r\n  border-bottom: 1px solid ${colors.light_grey};\r\n\r\n  label {\r\n    font-size: 14px;\r\n    color: ${colors.black};\r\n\r\n    &::after {\r\n      content: '';\r\n    }\r\n  }\r\n`;\r\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect } from 'react';\n\nimport useModal from 'hooks/modal';\nimport { showMessage } from 'utils/message';\n\nimport Calendar from 'components/Calendar';\nimport Tabs from 'components/Tabs';\nimport Select from 'components/Select';\n\nimport SideBar from 'components/SideBar';\nimport MySchedule from 'components/MySchedule';\nimport { IState } from 'store';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport EmptyView from 'components/ViewMessages/emptyview';\nimport LoadView from 'components/ViewMessages/loadView';\nimport { TabContainer, SelectContainer } from '../components/styles';\nimport { getProfessionalSchedulesRequest } from '../../../states/schedules/actions';\nimport { IProfessionalSchedulesState } from '../../../states/schedules/types';\n\nconst Scheduling: React.FC = () => {\n  const { resulted, loading } = useSelector<\n    IState,\n    IProfessionalSchedulesState\n  >(state => {\n    return state.professionalSchedules;\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!loading) {\n      dispatch(\n        getProfessionalSchedulesRequest({ date: new Date(2020, 0, 1, 8, 15) }),\n      );\n    }\n  }, [resulted]);\n\n  const {\n    isShowing: appointmentFormVisible,\n    toggle: toggleAppointmentForm,\n  } = useModal();\n\n  const {\n    isShowing: appointmentDetailVisible,\n    toggle: toggleAppointmentDetail,\n  } = useModal();\n  return (\n    <>\n      <SideBar>\n        <Calendar />\n\n        <SelectContainer>\n          <Select\n            id=\"unidade\"\n            name=\"unidade\"\n            label=\"Selecione a Unidade\"\n            options={[\n              { label: 'Unidade um', value: 1 },\n              { label: 'Unidade dois', value: 2 },\n              { label: 'Unidade três', value: 3 },\n            ]}\n            onchange={option => console.log(option)}\n          />\n        </SelectContainer>\n      </SideBar>\n\n      <TabContainer>\n        <Tabs\n          labels={[\n            { label: 'Minha agenda', key: 'Label1' },\n            { label: 'Salas', key: 'Label2' },\n          ]}\n          tabs={[\n            {\n              key: 'Tab1',\n              tab: (\n                <>\n                  {loading ? (\n                    <LoadView />\n                  ) : (resulted?.success || []).length <= 0 ? (\n                    <EmptyView myMessage=\"sem agendamento\" />\n                  ) : (\n                    <MySchedule data={resulted?.success || []} />\n                  )}\n                </>\n              ),\n            },\n            { key: 'Tab2', tab: <h1 key=\"Tab21\">Salas</h1> },\n          ]}\n        />\n      </TabContainer>\n    </>\n  );\n};\n\nexport default Scheduling;\n"],"sourceRoot":""}